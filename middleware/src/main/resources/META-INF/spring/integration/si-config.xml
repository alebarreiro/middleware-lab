<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
       xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
        http://www.springframework.org/schema/integration/xml http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
        http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd
        http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd
        http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-1.0.xsd"
>

    <!-- Definicion de canales -->

    <!-- ordenes xml sin validar -->
    <int:channel id="rawOrdersChannel"/>

    <!--ordenes con sintaxis xml validada-->
    <int:channel id="xmlOrdersChannel"/>

    <!-- canales con mas informacion para procesamiento futuro -->
    <int:channel id="orderExtendidoChannel"/>
    <int:channel id="OrdersExtendidoHeaderChannel"/>

    <!-- ordenes invalidas -->
    <int:channel id="invalidOrdersChannel"/>

    <int-stream:stdout-channel-adapter id="invalidOrdersChannel" append-newline="true"/>

    <!-- ordenes validas -->
    <int:channel id="validOrdersChannel"/>

    <!-- items splitteados -->
    <int:channel id="itemsChannel"/>

    <!-- canales dependientes de la categoria del item -->
    <int:channel id="datosChannel"/>
    <int:channel id="telefoniaChannel"/>
    <int:channel id="strawberryChannel"/>

    <int:channel id="aggregatorStrawberryChannel"/>
    <int:channel id="strawberryChannelResp"/>

    <int-stream:stdout-channel-adapter id="strawberryChannelResp" append-newline="true"/>

    <!-- canales de comunicacion externa -->
    <int:channel id="itemMobileSysChannel"/>

    <!-- Definicion de componentes de integracion -->
    <bean id="aggregatorStrawberry" class="com.middleware.integracion.AggregatorStrawberry" />

    <!-- Crea la coneccion con activeMQ, importante que el id sea connectionFactory -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="tcp://localhost:61616"/>

                <!-- ConfiguraciÃ³n de politicas de Retry en caso de error -->
                <property name="redeliveryPolicy" ref="redeliveryPolicy" />
            </bean>
        </property>
        <property name="sessionCacheSize" value="10"/>
        <property name="cacheProducers" value="false"/>
    </bean>

    <!-- Redelivery: Retry despues de 3,9,..., sec -->
    <bean id="redeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
        <!-- Tiempo de espera para retry's -->
        <property name="backOffMultiplier" value="3" />
        <!-- Multiplica x 2 el tiempo entre cada retry 3, 9, ... -->
        <property name="useExponentialBackOff" value="true" />
        <!-- Cantidad max de reintentos -->
        <property name="maximumRedeliveries" value="5" />
        <!-- Tiempo inicial de espera para retry -->
        <property name="initialRedeliveryDelay" value="5000" />
    </bean>

    <!-- crea la cola orders en activeMQ -->
    <bean id="AMQ:queue:orders" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="orders"/>
    </bean>

    <!-- lee de la cola de activeMQ y deposita en canal de ordenes raw -->
    <int-jms:inbound-channel-adapter id="newOrdersInChannelAdapter" destination="AMQ:queue:orders" channel="rawOrdersChannel">
        <int:poller fixed-rate="5000" />
    </int-jms:inbound-channel-adapter>

    <!-- valida el xml de la orden para ver si cumple con el formato especificado en order.xsd -->
    <int-xml:validating-filter input-channel="rawOrdersChannel"
                               output-channel="xmlOrdersChannel"
                               schema-location="classpath:/META-INF/spring/integration/order.xsd"
                               schema-type="xml-schema"
                               throw-exception-on-rejection="true"
                               discard-channel="invalidOrdersChannel" />

    <!--Se agrega informacion de la orden a los items para futuro procesamiento -->
    <int-xml:xslt-transformer input-channel="xmlOrdersChannel" output-channel="orderExtendidoChannel"
    xsl-resource="classpath:/META-INF/spring/integration/item-with-order-info.xsl"/>

    <!-- Se agregan headers que permitan validar si la orden es valida o no -->
    <int-xml:xpath-header-enricher input-channel="orderExtendidoChannel" output-channel="OrdersExtendidoHeaderChannel">
        <int-xml:header name="MONTO_TOTAL_ITEMS" xpath-expression="sum(/order/items/item/precio-total/text())"/>
        <int-xml:header name="MONTO_TOTAL_ORDER" xpath-expression="/order/facturacion/monto/text()"/>
        <int-xml:header name="MONEDA_VALIDA" xpath-expression="/order/facturacion/moneda/text() = 858 or /order/facturacion/moneda/text() = 840"/>
        <int-xml:header name="MONTO_VALIDO" xpath-expression="sum(/order/items/item/precio-total/text()) = /order/facturacion/monto/text()"/>
    </int-xml:xpath-header-enricher>

    <!-- Se filtran las ordenes invalidas -->
    <int:filter input-channel="OrdersExtendidoHeaderChannel"
                expression="headers['MONTO_VALIDO'] and headers['MONEDA_VALIDA']"
            output-channel="validOrdersChannel" discard-channel="invalidOrdersChannel"/>

    <!-- Se esplittean las ordenes en items -->
    <int-xml:xpath-splitter id="orderItemSplitter"
                            input-channel="validOrdersChannel"
                            output-channel="itemsChannel">
        <int-xml:xpath-expression expression="/order/items/item"/>
    </int-xml:xpath-splitter>

    <!-- Rutea dependiendo de la categoria -->
    <int-xml:xpath-router id="categoryRouter" input-channel="itemsChannel">
        <int-xml:xpath-expression expression="/item/categoria/text()"/>
        <int-xml:mapping value="1" channel="datosChannel"/>
        <int-xml:mapping value="2" channel="telefoniaChannel"/>
        <int-xml:mapping value="3" channel="strawberryChannel"/>
    </int-xml:xpath-router>

    <!-- guarda en la base de datosChannel utilizando xpath para obtener los valores de los xml del canal datosChannel -->
    <int-jdbc:outbound-channel-adapter
            query="insert into public.orders (clientId, productId, quantity, orderId, itemId)
                values (:clientId, :productId, :quantity, :orderId, :itemId)"
            data-source="postgresDs"
            channel="datosChannel"
            sql-parameter-source-factory="spelXpath"/>

    <!-- se utiliza xpath para obtener los valores de los item xml a insertar en la base -->
    <bean id="spelXpath"
          class="org.springframework.integration.jdbc.ExpressionEvaluatingSqlParameterSourceFactory">
        <property name="parameterExpressions">
            <map>
                <entry key="clientId" value="#xpath(payload, '/item/id-cliente/text()', 'number')" />
                <entry key="productId" value="#xpath(payload, '/item/id-producto/text()', 'number')" />
                <entry key="quantity" value="#xpath(payload, '/item/cantidad/text()', 'number')" />
                <entry key="orderId" value="#xpath(payload, '/item/id-orden/text()', 'number')" />
                <entry key="itemId" value="#xpath(payload, 'string(/item/@id)', 'number')" />
            </map>
        </property>
    </bean>

    <!-- transforma el xml item a un formato soportado por el sistema MobileSys -->
    <int-xml:xslt-transformer input-channel="telefoniaChannel" output-channel="itemMobileSysChannel"
                             xsl-resource="classpath:/META-INF/spring/integration/ms-item-template.xsl"/>

    <!-- Agregator de items, el webservice de strawberry exige una cantidad minima de items -->
    <int:aggregator id="AggregatorStrawberry"
                    input-channel="strawberryChannel" output-channel="aggregatorStrawberryChannel"
                    method="aggregate" ref="aggregatorStrawberry"
                    release-strategy="aggregatorStrawberry"
                    release-strategy-method="shouldRelease"
                    expire-groups-upon-completion="true"
                    correlation-strategy-expression="1">
    </int:aggregator>

    <!-- comunicaciones a sistemas externos -->

    <int-ws:outbound-gateway
            id="strawberryGateway"
            request-channel="aggregatorStrawberryChannel"
            reply-channel="strawberryChannelResp"
            uri="http://localhost:8080/WebServicesSOAP/SolicitudCompra" />


    <!-- crea la cola orders para MobileSys en activeMQ -->
    <bean id="AMQ:queue:ordersMobileSys" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="ordersMobileSys"/>
    </bean>

    <!-- Lee del canal MobileSys y manda el mensaje a una cola nueva de MobileSys en ActiveMQ -->
    <int-jms:outbound-channel-adapter id="jmsOut"
                                      connection-factory="connectionFactory"
                                      channel="itemMobileSysChannel"
                                      destination="AMQ:queue:ordersMobileSys">
    </int-jms:outbound-channel-adapter>
</beans>